#
# The MIT License
# Copyright © 2024-2024 Agence du Numérique en Santé (ANS)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

server:
  port: 8080
spring:
  cloud:
    gateway:
      httpclient:
        ssl:
    # !!! TEST ONLY : bien évidemment, en production ou lors des homologations, il convient d'omettre ce réglage et d'utiliser un truststore 
    # normal convenablement configuré !
          useInsecureTrustManager: true
    # Cette configuration de test définit deux Fournisseurs de Service aval
    # pour valider la bonne intégration de spring-gateway.
    # Dans une configuration de production, toutes les routes doivent être définies 
    # sur la base d'un chemin commençant par `/send` pour respecter le contrat d'API du proxy eSanté.
    # Le second élément du path définit le service cible, et la suite l'endpoint visé.
    # /send/<nom symbolique service aval>/<endpoint>
      routes:
        # Here we see that no route defines the trace filter => this will not be prone to forgetting them
        - id: backend-1
          uri: https://localhost:8081/
          predicates:
          - Path=/send/backend-1/{endpoint}
          filters:
          - SetPath=/{endpoint}
        - id: backend-2
          uri: https://localhost:8082/
          predicates:
          - Path=/send/backend-2/{endpoint}
          filters:
          - SetPath=/{endpoint}
# Cet backend demande une authentification mTLS (en prod, ils le feront **tous**) pour les cas de test qui vérifient
# que le système choisit bien son certificat client sortant en fonction de la session proxy (donc du client PSC entrant).
        - id: backend-mTLS
          uri: https://localhost:8083/
          predicates:
          - Path=/send/backend-mTLS/{endpoint}
          filters:
          - SetPath=/{endpoint}
psc:
  discoveryURL: http://localhost:8443/auth/realms/esante-wallet/.well-known/wallet-openid-configuration
  clients:
    client-id-of-test:
      type: SECRET
      secret: my_client_secret
# SECRET est un mécanisme pour permettre les requêtes CIBA en attendant la mise en place du mTLS ProSantéConnect
    client-id2-of-test: 
      type: SECRET
      secret: the_other_client_secret
# MTLS permet d'utiliser des certificats clients (un par client du proxy) pour faire les requêtes.
    client-with-cert:
      type: MTLS
      secret: CLIENTpass
      file: src/test/resources/client.edc.proxy.1.p12
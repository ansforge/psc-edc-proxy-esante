#
# (c) Copyright 2024-2024, Agence du Numérique en Santé (ANS) (https://esante.gouv.fr). All rights reserved.
#

server:
  port: 8080
spring:
  cloud:
    gateway:
    # Cette configuration de test définit deux Fournisseurs de Service aval
    # pour valider la bonne intégration de spring-gateway.
    # Dans une configuration de production, toutes les routes doivent être définies 
    # sur la base d'un chemin commençant par `/send` pour respecter le contrat d'API du proxy eSanté.
    # Le second élément du path définit le service cible, et la suite l'endpoint visé.
    # /send/<nom symbolique service aval>/<endpoint>
      routes:
        # Ici, nous voyons qu'aucune route ne définit le filtre 'trace' => il est défini globalement par le code, ce qui évite les oublis.
        - id: backend-1
          uri: http://localhost:8081/
          predicates:
          - Path=/send/backend-1/{endpoint}
          filters:
          - SetPath=/{endpoint}
          metadata:
             token-exchange-endpoint: https://auth.server.api.edc-psc.esante.gouv.fr/realms/signsessiondata/protocol/openid-connect/token
        - id: backend-2
          uri: http://localhost:8082/
          predicates:
          - Path=/send/backend-2/{endpoint}
          filters:
          - SetPath=/{endpoint}
          metadata:
            token-exchange-endpoint: https://auth.server.api.edc-psc.esante.gouv.fr/realms/apipsc2/protocol/openid-connect/token
psc:
  discoveryURL: http://localhost:8443/auth/realms/esante-wallet/.well-known/wallet-openid-configuration
  audience: proxy-exemple
  clients:
    client-id-of-test:
      type: SECRET
      secret: my_client_secret
# Liste des backends utilisés par ce LPS pour lequel il faudra échanger le jeton PSC pour un jeton d'API
# - le endpoint est défini dans les metadata de la route de chaque backend : propriété 'token-exchange-endpoint'
      backends:
      - backend-1
      - backend-2
# SECRET est un mécanisme pour permettre les requêtes CIBA en attendant la mise en place du mTLS ProSantéConnect
    client-id2-of-test: 
      type: SECRET,
      secret: the_other_client_secret
      backends:
      - backend-1
# MTLS permet d'utiliser des certificats clients (nu par client du proxy) pour faire les requêtesCIBA
    client-with-cert:
      type: MTLS
      secret: CLIENTpass
      file: src/test/resources/client.poc.roc.p12

<?xml version="1.0" encoding="UTF-8"?>
<!--

    (c) Copyright 2024-2024, Agence du Numérique en Santé (ANS) (https://esante.gouv.fr). All rights reserved.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.4</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>
  <groupId>fr.gouv.ans.psc</groupId>
  <version>0.0.1-SNAPSHOT</version>
  <artifactId>psc-esante-proxy-example</artifactId>
  <description>Example d'implémentation de la spécification eSanté Proxy</description>
  <inceptionYear>2024</inceptionYear>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <spring.cloud.version>2023.0.3</spring.cloud.version>
    <!-- 
      Downgrade Jetty 
      parce que WireMock 9.3.1 n'est pas encore complètement compatible avec Jetty 12
      et nous ne l'utilisons pas dans le code applicatif.
    -->
    <jetty.component.version>11.0.24</jetty.component.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- 
        Downgrade Jetty 
        parce que WireMock 9.3.1 n'est pas encore complètement compatible avec Jetty 12
        et nous ne l'utilisons pas dans le code applicatif.
      -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-alpn-client</artifactId>
        <version>${jetty.component.version}</version>
      </dependency> 
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-alpn-java-client</artifactId>
        <version>${jetty.component.version}</version>
      </dependency> 
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-alpn-java-server</artifactId>
        <version>${jetty.component.version}</version>
      </dependency> 
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-alpn-server</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-http</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-io</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-proxy</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-security</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlets</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-xml</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-webapp</artifactId>
        <version>${jetty.component.version}</version>
      </dependency>
      <!-- FIN downgrade Jetty -->
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-gateway</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>oauth2-oidc-sdk</artifactId>
      <version>11.19.1</version>
    </dependency>
    <!-- Outils de test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>3.9.1</version>
      <scope>test</scope>
    </dependency>
    <!-- FIN Outils de test -->
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!-- license  mvn license:format -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.4.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>license.current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>4.6</version>
        <configuration>
          <header>license/copyright-ans.txt</header>
          <properties>
            <owner>Agence du Numérique en Santé (ANS)</owner>
            <email>https://esante.gouv.fr</email>
            <year>${project.inceptionYear}-2024</year> 
          </properties>
          <defaultUseDefaultExcludes>false</defaultUseDefaultExcludes>
          <excludes>
            <exclude>.git/**/*</exclude>
            <exclude>**/*.json</exclude>
            <exclude>**/*.ndjson</exclude>
            <exclude>**/target/**/*</exclude>
            <exclude>**/*.png</exclude>
            <exclude>**/*.ico</exclude>
          </excludes>
          <mapping>
            <gitattributes>SCRIPT_STYLE</gitattributes>
            <hcl>SLASHSTAR_STYLE</hcl>
            <nomad.tpl>SLASHSTAR_STYLE</nomad.tpl>
            <md>XML_STYLE</md>
          </mapping>
          <aggregate>false</aggregate>
          <strictCheck>true</strictCheck>
          <properties>
            <!--
              This license current year is computed. If we wanted to rebuild an old version without
              changing license headers, we would just need to add -Dlicense.current.year=XXX to the maven command line.
            -->
            <license.current.year>${license.current.year}</license.current.year>
            <owner>Agence du Numérique en Santé (ANS)</owner>
            <email>https://esante.gouv.fr</email>
            <year>${project.inceptionYear}-${license.current.year}</year>
          </properties>
        </configuration>
        <executions>
          <execution>
            <id>license-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <!-- END license -->
    </plugins>
  </build>
</project>
